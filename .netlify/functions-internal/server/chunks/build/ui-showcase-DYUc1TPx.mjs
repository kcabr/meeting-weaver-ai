import { jsxs, jsx } from 'react/jsx-runtime';
import { g, m as m$1 } from './button-B3FJhynQ.mjs';
import { t as t$1, c as c$1, i, m, l, n as n$2 } from './card-0DekqH9F.mjs';
import { f } from './input-CVyGX5WE.mjs';
import { p } from './label-CovgPzvG.mjs';
import { t } from './textarea-D88q28tT.mjs';
import { n as n$1 } from './switch-m0TDxieA.mjs';
import * as c from 'react';
import * as d from '@radix-ui/react-dialog';
import { X, ChevronRight, Check, Circle } from 'lucide-react';
import * as n from '@radix-ui/react-dropdown-menu';
import '@radix-ui/react-slot';
import 'class-variance-authority';
import 'clsx';
import 'tailwind-merge';
import '@radix-ui/react-label';
import '@radix-ui/react-switch';

const O = d.Root, B = d.Trigger, A = d.Portal, v = c.forwardRef(({ className: t, ...o }, i) => jsx(d.Overlay, { ref: i, className: m$1("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0", t), ...o }));
v.displayName = d.Overlay.displayName;
const C = c.forwardRef(({ className: t, children: o, ...i }, r) => jsxs(A, { children: [jsx(v, {}), jsxs(d.Content, { ref: r, className: m$1("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg", t), ...i, children: [o, jsxs(d.Close, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [jsx(X, { className: "h-4 w-4" }), jsx("span", { className: "sr-only", children: "Close" })] })] })] }));
C.displayName = d.Content.displayName;
const D = ({ className: t, ...o }) => jsx("div", { className: m$1("flex flex-col space-y-1.5 text-center sm:text-left", t), ...o });
D.displayName = "DialogHeader";
const R = ({ className: t, ...o }) => jsx("div", { className: m$1("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2", t), ...o });
R.displayName = "DialogFooter";
const S = c.forwardRef(({ className: t, ...o }, i) => jsx(d.Title, { ref: i, className: m$1("text-lg font-semibold leading-none tracking-tight", t), ...o }));
S.displayName = d.Title.displayName;
const I = c.forwardRef(({ className: t, ...o }, i) => jsx(d.Description, { ref: i, className: m$1("text-sm text-muted-foreground", t), ...o }));
I.displayName = d.Description.displayName;
const E = n.Root, H = n.Trigger, U = c.forwardRef(({ className: t, inset: o, children: i, ...r }, f) => jsxs(n.SubTrigger, { ref: f, className: m$1("flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent", o && "pl-8", t), ...r, children: [i, jsx(ChevronRight, { className: "ml-auto h-4 w-4" })] }));
U.displayName = n.SubTrigger.displayName;
const Y = c.forwardRef(({ className: t, ...o }, i) => jsx(n.SubContent, { ref: i, className: m$1("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", t), ...o }));
Y.displayName = n.SubContent.displayName;
const M = c.forwardRef(({ className: t, sideOffset: o = 4, ...i }, r) => jsx(n.Portal, { children: jsx(n.Content, { ref: r, sideOffset: o, className: m$1("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2", t), ...i }) }));
M.displayName = n.Content.displayName;
const h = c.forwardRef(({ className: t, inset: o, ...i }, r) => jsx(n.Item, { ref: r, className: m$1("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", o && "pl-8", t), ...i }));
h.displayName = n.Item.displayName;
const V = c.forwardRef(({ className: t, children: o, checked: i, ...r }, f) => jsxs(n.CheckboxItem, { ref: f, className: m$1("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", t), checked: i, ...r, children: [jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: jsx(n.ItemIndicator, { children: jsx(Check, { className: "h-4 w-4" }) }) }), o] }));
V.displayName = n.CheckboxItem.displayName;
const G = c.forwardRef(({ className: t, children: o, ...i }, r) => jsxs(n.RadioItem, { ref: r, className: m$1("relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50", t), ...i, children: [jsx("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: jsx(n.ItemIndicator, { children: jsx(Circle, { className: "h-2 w-2 fill-current" }) }) }), o] }));
G.displayName = n.RadioItem.displayName;
const T = c.forwardRef(({ className: t, inset: o, ...i }, r) => jsx(n.Label, { ref: r, className: m$1("px-2 py-1.5 text-sm font-semibold", o && "pl-8", t), ...i }));
T.displayName = n.Label.displayName;
const u = c.forwardRef(({ className: t, ...o }, i) => jsx(n.Separator, { ref: i, className: m$1("-mx-1 my-1 h-px bg-muted", t), ...o }));
u.displayName = n.Separator.displayName;
const ne = function() {
  return jsxs("div", { className: "max-w-4xl mx-auto py-8 px-4", children: [jsx("h1", { className: "text-3xl font-bold mb-8", children: "ShadCN UI Components" }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Buttons" }), jsxs("div", { className: "flex flex-wrap gap-4", children: [jsx(g, { children: "Default" }), jsx(g, { variant: "secondary", children: "Secondary" }), jsx(g, { variant: "destructive", children: "Destructive" }), jsx(g, { variant: "outline", children: "Outline" }), jsx(g, { variant: "ghost", children: "Ghost" }), jsx(g, { variant: "link", children: "Link" })] }), jsxs("div", { className: "flex flex-wrap gap-4 mt-4", children: [jsx(g, { size: "sm", children: "Small" }), jsx(g, { children: "Default" }), jsx(g, { size: "lg", children: "Large" }), jsx(g, { size: "icon", children: jsx("span", { children: "+" }) })] })] }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Inputs" }), jsxs("div", { className: "grid gap-4 max-w-md", children: [jsx(f, { placeholder: "Default input" }), jsx(f, { placeholder: "Disabled input", disabled: true }), jsx(f, { placeholder: "With label", id: "with-label" }), jsxs("div", { className: "grid w-full max-w-sm items-center gap-1.5", children: [jsx(p, { htmlFor: "email", children: "Email" }), jsx(f, { type: "email", id: "email", placeholder: "Email" })] })] })] }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Textarea" }), jsxs("div", { className: "grid w-full gap-1.5 max-w-md", children: [jsx(p, { htmlFor: "message", children: "Your message" }), jsx(t, { placeholder: "Type your message here.", id: "message" })] })] }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Switch" }), jsxs("div", { className: "flex items-center space-x-2", children: [jsx(n$1, { id: "airplane-mode" }), jsx(p, { htmlFor: "airplane-mode", children: "Airplane Mode" })] })] }), jsxs("section", { children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Cards" }), jsxs("div", { className: "grid gap-6 md:grid-cols-2", children: [jsxs(t$1, { children: [jsxs(c$1, { children: [jsx(i, { children: "Card Title" }), jsx(m, { children: "Card Description" })] }), jsx(l, { children: jsx("p", { children: "Card Content" }) }), jsx(n$2, { children: jsx(g, { children: "Action" }) })] }), jsxs(t$1, { children: [jsxs(c$1, { children: [jsx(i, { children: "Notification" }), jsx(m, { children: "You have 3 unread messages" })] }), jsx(l, { children: jsx("p", { children: "View your messages below or visit your inbox." }) }), jsxs(n$2, { className: "flex justify-between", children: [jsx(g, { variant: "ghost", children: "Cancel" }), jsx(g, { children: "View" })] })] })] })] }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Dropdown Menu" }), jsxs(E, { children: [jsx(H, { asChild: true, children: jsx(g, { variant: "outline", children: "Open Menu" }) }), jsxs(M, { className: "w-56", children: [jsx(T, { children: "My Account" }), jsx(u, {}), jsx(h, { children: "Profile" }), jsx(h, { children: "Billing" }), jsx(h, { children: "Settings" }), jsx(u, {}), jsx(h, { children: "Logout" })] })] })] }), jsxs("section", { className: "mb-12", children: [jsx("h2", { className: "text-2xl font-semibold mb-4", children: "Dialog" }), jsxs(O, { children: [jsx(B, { asChild: true, children: jsx(g, { variant: "outline", children: "Open Dialog" }) }), jsxs(C, { className: "sm:max-w-[425px]", children: [jsxs(D, { children: [jsx(S, { children: "Edit Profile" }), jsx(I, { children: "Make changes to your profile here. Click save when you're done." })] }), jsxs("div", { className: "grid gap-4 py-4", children: [jsxs("div", { className: "grid grid-cols-4 items-center gap-4", children: [jsx(p, { htmlFor: "name", className: "text-right", children: "Name" }), jsx(f, { id: "name", placeholder: "Your name", className: "col-span-3" })] }), jsxs("div", { className: "grid grid-cols-4 items-center gap-4", children: [jsx(p, { htmlFor: "username", className: "text-right", children: "Username" }), jsx(f, { id: "username", placeholder: "@username", className: "col-span-3" })] })] }), jsx(R, { children: jsx(g, { type: "submit", children: "Save changes" }) })] })] })] })] });
};

export { ne as component };
//# sourceMappingURL=ui-showcase-DYUc1TPx.mjs.map
